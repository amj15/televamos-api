kind: pipeline
type: docker
name: default

params:
  import_datetime:
    description: Fecha y hora para la importación (YYYY-MM-DD HH:mm:ss)
    default: ""


steps:
  - name: build
    image: docker:latest
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
    commands:
      - docker build -t televamos-api:latest -f docker/php/Dockerfile . --build-arg APP_ENV=prod --build-arg APP_DEBUG=0


  - name: deploy
    image: docker/compose:latest
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
    environment:
      COMPOSE_FILE: docker-compose.yml
    commands:
      - docker-compose -f docker-compose.yml pull
      - docker-compose -f docker-compose.yml down
      - docker-compose -f docker-compose.yml up -d --build
        # Espera a que PHP esté listo (opcional, si el contenedor arranca lento)
      - sleep 5
        # Ejecuta migrations desde dentro del contenedor, asegurando el working_dir
      - docker exec -w /var/www/html symfony_php php bin/console doctrine:migrations:migrate --no-interaction

  - name: check default.conf
    image: alpine
    commands:
      - if [ -d docker/nginx/conf.d/default.conf ]; then echo "default.conf es un directorio y no debería"; exit 1; fi
      - ls -l docker/nginx/conf.d/

  - name: import-gpx
    image: docker:latest
    depends_on:
      - deploy
    when:
      event: manual
    volumes:
      - name: docker-sock
        path: /var/run/docker.sock
    commands:
      - docker exec symfony_php php DATETIME=${DRONE_BUILD_PARAM_IMPORT_DATETIME:-$(date '+%Y-%m-%d %H:%M:%S')} memory_limit=512M bin/console app:import-gpx "$DATETIME"

volumes:
  - name: docker-sock
    host:
      path: /var/run/docker.sock